<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog do Fabrício</title>
    <description>Desenvolvedor C#, Java, Javascript e Go que procura sempre acompanhar o mercado que está em constante mutação.
</description>
    <link>https://fgodoy.me/</link>
    <atom:link href="https://fgodoy.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 02 Jul 2016 04:49:45 +0000</pubDate>
    <lastBuildDate>Sat, 02 Jul 2016 04:49:45 +0000</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Entendendo a vulnerabilidade de segurança do JWT</title>
        <description>&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Unresolved directive in &amp;lt;stdin&amp;gt; - include::jwt-hole/intro.adoc[]
Unresolved directive in &amp;lt;stdin&amp;gt; - include::jwt-hole/base-concepts.adoc[]
Unresolved directive in &amp;lt;stdin&amp;gt; - include::jwt-hole/analysis.adoc[]&lt;/p&gt;
&lt;/div&gt;</description>
        <pubDate>Sun, 22 May 2016 00:00:00 +0000</pubDate>
        <link>https://fgodoy.me/2016/05/jwt-hole/</link>
        <guid isPermaLink="true">https://fgodoy.me/2016/05/jwt-hole/</guid>
        
        <category>vulnerabilidade</category>
        
        <category>segurança</category>
        
        <category>seguranca</category>
        
        <category>bug</category>
        
        <category>jwt</category>
        
        <category>criptografia</category>
        
        <category>json</category>
        
        
        <category>Programação</category>
        
      </item>
    
      <item>
        <title>Internacionalização (I18n) com Autotools</title>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Explicarei como &lt;em&gt;internacionalizar&lt;/em&gt;, ou seja, tornar um programa
traduzível.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Tomarei como exemplo o projeto hello-world do post anterior.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Você pode baixar o pacote final do projeto do post anterior em
&lt;a href=&quot;http://dl.getdropbox.com/u/1671797/Blog/hello-world-0.2.0.tar.gz&quot; class=&quot;bare&quot;&gt;http://dl.getdropbox.com/u/1671797/Blog/hello-world-0.2.0.tar.gz&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Será necessário as seguintes ferramentas: intltool e gettext.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Adicione o seguinte código no arquivo configure.ac:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;configure.ac&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-c&quot;&gt;# Checks for libraries.&lt;/span&gt;
PKG_CHECK_MODULES&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;DEPS&lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt;,&lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt;glib-2.0&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
AC_SUBST&lt;span class=&quot;tok-o&quot;&gt;(&lt;/span&gt;DEPS_CFLAGS&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
AC_SUBST&lt;span class=&quot;tok-o&quot;&gt;(&lt;/span&gt;DEPS_LIBS&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;

&lt;span class=&quot;tok-c&quot;&gt;# -------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;# Internationalization&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;# -------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;tok-nv&quot;&gt;GETTEXT_PACKAGE&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;hello-world &lt;i class=&quot;conum&quot; data-value=&quot;4&quot;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
AC_SUBST&lt;span class=&quot;tok-o&quot;&gt;(&lt;/span&gt;GETTEXT_PACKAGE&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;5&quot;&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt;
AC_DEFINE_UNQUOTED&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;GETTEXT_PACKAGE&lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$GETTEXT_PACKAGE&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt;,
 &lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt;the gettext translation domain&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;6&quot;&gt;&lt;/i&gt;&lt;b&gt;(6)&lt;/b&gt;

AM_GLIB_GNU_GETTEXT &lt;i class=&quot;conum&quot; data-value=&quot;7&quot;&gt;&lt;/i&gt;&lt;b&gt;(7)&lt;/b&gt;
GLIB_DEFINE_LOCALEDIR&lt;span class=&quot;tok-o&quot;&gt;(&lt;/span&gt;HELLO_WORLD_LOCALEDIR&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;8&quot;&gt;&lt;/i&gt;&lt;b&gt;(8)&lt;/b&gt;

IT_PROG_INTLTOOL&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;0.35.1&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;9&quot;&gt;&lt;/i&gt;&lt;b&gt;(9)&lt;/b&gt;

&lt;span class=&quot;tok-c&quot;&gt;# -------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;# Check OS-specific platform&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Procura pela biblioteca &lt;em&gt;glib-2.0&lt;/em&gt; e define as variáveis &lt;em&gt;DEPS_CFLAGS&lt;/em&gt; e
&lt;em&gt;DEPS_LIBS&lt;/em&gt; (detalhes abaixo). Caso a biblioteca não seja encontrada é retornado
um erro.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Faz com que &lt;em&gt;@DEPS_CFLAGS@&lt;/em&gt; ou &lt;em&gt;$(DEPS_CFLAGS)&lt;/em&gt;, nos arquivos de saída do
autoconf, seja substituído pelo valor da variável.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;O mesmo que o comando acima, mas com a variável &lt;em&gt;DEPS_LIBS&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;4&quot;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Está sendo definida uma variável local.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;5&quot;&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;O mesmo que as macros &lt;em&gt;AC_SUBST&lt;/em&gt; acima, mas com a variável
&lt;em&gt;GETTEXT_PACKAGE&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;6&quot;&gt;&lt;/i&gt;&lt;b&gt;6&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Igual a macro &lt;em&gt;AC_DEFINE&lt;/em&gt; com o diferencial de expandir expressões de shell
(ver &quot;Definindo símbolos&quot;). Define, no arquivo &lt;em&gt;config.h&lt;/em&gt;, o símbolo
GETTEXT_PACKAGE com o valor da variável GETTEXT_PACKAGE.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;7&quot;&gt;&lt;/i&gt;&lt;b&gt;7&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Faz verificações se o gettext pode ser usado, define o símbolo
&lt;em&gt;HAVE_GETTEXT&lt;/em&gt; no arquivo &lt;em&gt;config.h&lt;/em&gt; entre outros.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;8&quot;&gt;&lt;/i&gt;&lt;b&gt;8&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define o nome do símbolo que conterá o caminho do diretório de localização.
É o caminho do diretório de onde os catálogos de mensagens de cada língua será
instalado.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;9&quot;&gt;&lt;/i&gt;&lt;b&gt;9&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Faz verificações se o intltool pode ser usado e define a versão mínima
necessária.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ainda no arquivo &lt;em&gt;configure.ac&lt;/em&gt; adicione o arquivo &quot;po/Makefile.in&quot; em
&lt;em&gt;AC_CONFIG_FILES&lt;/em&gt;. Desta maneira o arquivo &lt;em&gt;Makefile&lt;/em&gt; que será criado
no diretório &lt;em&gt;po&lt;/em&gt; fará parte da compilação.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;configure.ac&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;AC_CONFIG_FILES&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;Makefile
    src/Makefile
    po/Makefile.in&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para que se possa fazer o uso da biblioteca &lt;em&gt;glib-2.0&lt;/em&gt; é necessário
indicar ao compilador onde achar os arquivos de cabeçalho e os objetos
de ligação. Para isso é necessário modificar o arquivo &lt;em&gt;Makefile.am&lt;/em&gt;
como abaixo:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Makefile.am&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;bin_PROGRAMS&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; hello-world

&lt;span class=&quot;tok-nv&quot;&gt;hello_world_SOURCES&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; main.cpp
&lt;span class=&quot;tok-k&quot;&gt;if&lt;/span&gt; OS_WIN32
hello_world_SOURCES +&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; windowsdef.h
endif

&lt;span class=&quot;tok-nv&quot;&gt;hello_world_LDADD&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;$(&lt;/span&gt;DEPS_LIBS&lt;span class=&quot;tok-k&quot;&gt;)&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;span class=&quot;tok-nv&quot;&gt;hello_world_CXXFLAGS&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;$(&lt;/span&gt;DEPS_CFLAGS&lt;span class=&quot;tok-k&quot;&gt;)&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;DEPS_LIBS&lt;/strong&gt; é a variável com os caminhos para os objetos de ligação.
Esses objetos têm a listagem e endereçamento de cada função.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;DEPS_CFLAGS&lt;/strong&gt; é a variável com os caminhos para os arquivos de cabeçalho.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Crie o diretório &lt;em&gt;po&lt;/em&gt; no diretório raíz do projeto, este diretório
conterá os catálogos de cada língua.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Crie um arquivo vazio com o nome &lt;em&gt;LINGUAS&lt;/em&gt;, neste arquivo será listado
os códigos de cada idioma com suporte.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Crie um arquivo vazio com o nome &lt;em&gt;POTFILES.in&lt;/em&gt;, neste arquivo será
listado todos os arquivos com mensagens traduzíveis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;No arquivo &lt;em&gt;Makefile.am&lt;/em&gt; do diretório raíz do projeto adicione o
diretório &lt;em&gt;po&lt;/em&gt; em &lt;em&gt;SUBDIRS&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Makefile.am&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;SUBDIRS&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; src po&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;É necessário adicionar os scripts de internacionalização ao pacote de
distribuição, para isso adicione o código  abaixo ao arquivo
&lt;em&gt;Makefile.am&lt;/em&gt; do diretório raíz.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Makefile.am&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;SUBDIRS&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; src po

&lt;span class=&quot;tok-nv&quot;&gt;INTLTOOL_FILES&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;tok-se&quot;&gt;\ &lt;/span&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
 intltool-extract.in &lt;span class=&quot;tok-se&quot;&gt;\&lt;/span&gt;
 intltool-merge.in &lt;span class=&quot;tok-se&quot;&gt;\&lt;/span&gt;
 intltool-update.in

&lt;span class=&quot;tok-nv&quot;&gt;EXTRA_DIST&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;tok-se&quot;&gt;\ &lt;/span&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
 &lt;span class=&quot;tok-k&quot;&gt;$(&lt;/span&gt;INTLTOOL_FILES&lt;span class=&quot;tok-k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;tok-nv&quot;&gt;DISTCLEANFILES&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;tok-se&quot;&gt;\ &lt;/span&gt;&lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
 intltool-extract &lt;span class=&quot;tok-se&quot;&gt;\&lt;/span&gt;
 intltool-merge &lt;span class=&quot;tok-se&quot;&gt;\&lt;/span&gt;
 intltool-update &lt;span class=&quot;tok-se&quot;&gt;\&lt;/span&gt;
 po/.intltool-merge-cache&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;INTLTOOL_FILES&lt;/strong&gt; é uma variável com a lista de scripts usados pelo intltool.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;EXTRA_DIST&lt;/strong&gt; define arquivos adicionais que serão adicionados ao
pacote de distribuição.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;DISTCLEANFILES&lt;/strong&gt; define os arquivos adicionais que serão removidos
pelo comando &quot;&lt;em&gt;make distclean&lt;/em&gt;&quot;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para atualizar os scripts com as mudanças execute o comando
&quot;&lt;em&gt;autoreconf&lt;/em&gt;&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para preparar o projeto para o intltool, execute o comando
&quot;&lt;em&gt;intltoolize&lt;/em&gt;&quot; no diretório raíz do projeto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Agora é necessário inicializar o &lt;em&gt;libintl&lt;/em&gt; e marcar as strings como
traduzíveis. Para isso modifique o arquivo &lt;em&gt;main.cpp&lt;/em&gt; como a seguir:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;main.cpp&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;tok-cp&quot;&gt;#ifdef HAVE_CONFIG_H&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#include &amp;lt;config.h&amp;gt; &lt;/span&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#endif&lt;/span&gt;

&lt;span class=&quot;tok-cp&quot;&gt;#ifdef WINNT&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#include &amp;quot;windowsdef.h&amp;quot;&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#endif&lt;/span&gt;

&lt;span class=&quot;tok-cp&quot;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#include &amp;lt;glib/gi18n.h&amp;gt; &lt;/span&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;

&lt;span class=&quot;tok-kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;tok-nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;tok-c1&quot;&gt;// Gettext initialization&lt;/span&gt;
  &lt;span class=&quot;tok-n&quot;&gt;setlocale&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-n&quot;&gt;LC_ALL&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;tok-s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;);&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
  &lt;span class=&quot;tok-n&quot;&gt;bindtextdomain&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-n&quot;&gt;GETTEXT_PACKAGE&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;HELLO_WORLD_LOCALEDIR&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;);&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;4&quot;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
  &lt;span class=&quot;tok-n&quot;&gt;bind_textdomain_codeset&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-n&quot;&gt;GETTEXT_PACKAGE&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;tok-s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;);&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;5&quot;&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt;
  &lt;span class=&quot;tok-n&quot;&gt;textdomain&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-n&quot;&gt;GETTEXT_PACKAGE&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;);&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;6&quot;&gt;&lt;/i&gt;&lt;b&gt;(6)&lt;/b&gt;

  &lt;span class=&quot;tok-n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;tok-n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;tok-n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;7&quot;&gt;&lt;/i&gt;&lt;b&gt;(7)&lt;/b&gt;
  &lt;span class=&quot;tok-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;tok-mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Para usar os símbolos &lt;em&gt;GETTEXT_PACKAGE&lt;/em&gt; e &lt;em&gt;HELLO_WORLD_LOCALEDIR&lt;/em&gt; é
necessário incluir o cabeçalho &lt;em&gt;config.h&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;O cabeçalho &lt;em&gt;gi18n.h&lt;/em&gt; inclui o cabeçalho &lt;em&gt;libintl.h&lt;/em&gt;, que contém as
funções de internacionalização, e define símbolos comumente usados na
internacionalização.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;A função &lt;em&gt;setlocale()&lt;/em&gt; define a localização atual que será usada pelo
gettext.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;4&quot;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;A função &lt;em&gt;bindtextdomain()&lt;/em&gt; define o caminho do catálogo de
&lt;em&gt;GETTEXT_PACKAGE&lt;/em&gt; para &lt;em&gt;HELLO_WORLD_LOCALEDIR&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;5&quot;&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;A função &lt;em&gt;bind_textdomain_codeset()&lt;/em&gt; define a codificação das mensagens
do catálogo de &lt;em&gt;GETTEXT_PACKAGE&lt;/em&gt; para UTF-8.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;6&quot;&gt;&lt;/i&gt;&lt;b&gt;6&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;A função &lt;em&gt;textdomain()&lt;/em&gt; define o catálogo de mensagens padrão para
&lt;em&gt;GETTEXT_PACKAGE&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;7&quot;&gt;&lt;/i&gt;&lt;b&gt;7&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;A função &lt;em&gt;_()&lt;/em&gt; é um símbolo que foi definido pelo &lt;em&gt;gi18n.h&lt;/em&gt; que é um
apelido para a função &lt;em&gt;gettext()&lt;/em&gt; do cabeçalho &lt;em&gt;libintl.h&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Agora o projeto está pronto para ser traduzido (localizado).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O pacote final pode ser acessado neste link:
&lt;a href=&quot;http://dl.getdropbox.com/u/1671797/Blog/hello-world-0.3.0.tar.gz&quot; class=&quot;bare&quot;&gt;http://dl.getdropbox.com/u/1671797/Blog/hello-world-0.3.0.tar.gz&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;referências&quot;&gt;Referências&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Definindo símbolos:
&lt;a href=&quot;http://www.gnu.org/software/hello/manual/autoconf/Defining-Symbols.html&quot; class=&quot;bare&quot;&gt;http://www.gnu.org/software/hello/manual/autoconf/Defining-Symbols.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Internacionalização:
&lt;a href=&quot;http://www.gtkmm.org/docs/gtkmm-2.4/docs/tutorial/html/chapter-internationalization.html&quot; class=&quot;bare&quot;&gt;http://www.gtkmm.org/docs/gtkmm-2.4/docs/tutorial/html/chapter-internationalization.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;pkg-config: &lt;a href=&quot;http://pkg-config.freedesktop.org/&quot; class=&quot;bare&quot;&gt;http://pkg-config.freedesktop.org/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;setlocale:
&lt;a href=&quot;http://www.opengroup.org/onlinepubs/009695399/functions/setlocale.html&quot; class=&quot;bare&quot;&gt;http://www.opengroup.org/onlinepubs/009695399/functions/setlocale.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Mon, 14 Sep 2009 00:00:00 +0000</pubDate>
        <link>https://fgodoy.me/2009/09/autotools-internacionalizacao-i18n/</link>
        <guid isPermaLink="true">https://fgodoy.me/2009/09/autotools-internacionalizacao-i18n/</guid>
        
        <category>autotools</category>
        
        <category>getlocale</category>
        
        <category>gettext</category>
        
        <category>intltool</category>
        
        <category>intltoolize</category>
        
        <category>libintl</category>
        
        
        <category>Programação</category>
        
      </item>
    
      <item>
        <title>Identificando o ambiente de destino com Autotools</title>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Explicarei aqui como identificar qual o ambiente de destino de compilação, ou
seja, o ambiente no qual será executado o binário.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para isso tomarei como exemplo o projeto hello-world do post anterior.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Você pode baixar o pacote final do projeto do post anterior em
&lt;a href=&quot;http://dl.getdropbox.com/u/1671797/Blog/hello-world-0.1.0.tar.gz&quot; class=&quot;bare&quot;&gt;http://dl.getdropbox.com/u/1671797/Blog/hello-world-0.1.0.tar.gz&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;No arquivo &lt;em&gt;configure.ac&lt;/em&gt;, é necessário adicionar a seguinte macro:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;configure.ac&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;AM_INIT_AUTOMAKE&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;1.9 -Wall -Werror&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;tok-c&quot;&gt;# Check build environment&lt;/span&gt;
AC_CANONICAL_HOST

&lt;span class=&quot;tok-c&quot;&gt;# Checks for programs.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Com essa macro serão criados os arquivos de script &lt;em&gt;config.guess&lt;/em&gt; e &lt;em&gt;config.sub&lt;/em&gt;
que serão usados para identificar o ambiente de destino.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Serão definidas quatro variáveis de ambiente, que são: &lt;em&gt;host&lt;/em&gt;, &lt;em&gt;host_cpu&lt;/em&gt;,
&lt;em&gt;host_vendor&lt;/em&gt;, &lt;em&gt;host_os&lt;/em&gt;. Com essas variáveis é possível condicionar a
compilação para cada ambiente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Caso o ambiente de destino seja o MinGW de 32 bits para PC, normalmente, a
variável &lt;em&gt;host&lt;/em&gt; teria o valor &lt;em&gt;i686-pc-mingw32&lt;/em&gt; e como consequência as variáveis
&lt;em&gt;host_cpu&lt;/em&gt;, &lt;em&gt;host_vendor&lt;/em&gt; e &lt;em&gt;host_os&lt;/em&gt; teriam os valores &lt;em&gt;i686&lt;/em&gt;, &lt;em&gt;pc&lt;/em&gt; e &lt;em&gt;mingw32&lt;/em&gt;
respectivamente. Assim podemos dizer que &quot;host=$host_cpu-$host_vendor-$host_os&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Criarei uma verificação para definir a variável &lt;em&gt;OS_WIN32&lt;/em&gt; caso a variável
&lt;em&gt;host_os&lt;/em&gt; tenha a palavra &quot;mingw&quot;. Para isso adicionarei o seguinte script no
arquivo &lt;em&gt;configure.ac&lt;/em&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;configure.ac&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-c&quot;&gt;# -------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;# Check OS-specific platform&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;# -------------------------------------------------&lt;/span&gt;
AC_MSG_CHECKING&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;tok-k&quot;&gt;for&lt;/span&gt; native Win32&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;tok-k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$host_os&amp;quot;&lt;/span&gt; in
  *mingw*&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;tok-nv&quot;&gt;iswin32&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;yes
  &lt;span class=&quot;tok-p&quot;&gt;;;&lt;/span&gt;
  *&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;tok-nv&quot;&gt;iswin32&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;no
  &lt;span class=&quot;tok-p&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;tok-k&quot;&gt;esac&lt;/span&gt;
AC_MSG_RESULT&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;tok-nv&quot;&gt;$iswin32&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt;

AM_CONDITIONAL&lt;span class=&quot;tok-o&quot;&gt;(&lt;/span&gt;OS_WIN32, &lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$iswin32&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A macro &lt;em&gt;AC_MSG_CHECKING&lt;/em&gt; faz imprimir na tela a mensagem &quot;checking for native
Win32&amp;#8230;&amp;#8203;&quot; indicando que está sendo feita a verificação por uma característica
específica.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Em seguida é verificada a variável de ambiente pela palavra &quot;mingw&quot;, caso
encontre a variável local &lt;em&gt;iswin32&lt;/em&gt; será definida para o valor &quot;yes&quot;, senão para
o valor &quot;no&quot; (Leia sobre &lt;a href=&quot;http://aurelio.net/shell/&quot;&gt;Bash&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A macro &lt;em&gt;AC_MSG_RESULT&lt;/em&gt; imprime na tela o resultado da última macro
&lt;em&gt;AC_MSG_CHECKING&lt;/em&gt;. Imprime &quot;checking for native Win32&amp;#8230;&amp;#8203; yes&quot;, caso a variável
&lt;em&gt;iswin32&lt;/em&gt; tenha o valor &quot;yes&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A macro &lt;em&gt;AM_CONDITIONAL&lt;/em&gt; de maneira condicional define ou não a variável
&lt;em&gt;OS_WIN32&lt;/em&gt; a qual será compartilhada a todos Makefiles. Caso a variável local
&lt;em&gt;iswin32&lt;/em&gt; tenha o valor &quot;yes&quot; a variável &lt;em&gt;OS_WIN32&lt;/em&gt; será definida.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Adicionarei o seguinte conteúdo no arquivo &lt;em&gt;Makefile.am&lt;/em&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Makefile.am&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;hello_world_SOURCES&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; main.cpp
&lt;span class=&quot;tok-k&quot;&gt;if&lt;/span&gt; OS_WIN32
hello_world_SOURCES +&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; windowsdef.h
endif&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Assim o arquivo &lt;em&gt;windowsdef.h&lt;/em&gt; só será compilado caso esteja definida a variável
&lt;em&gt;OS_WIN32&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Criarei o arquivo &lt;em&gt;windowsdef.h&lt;/em&gt; com o seguinte conteúdo:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;windowsdef.h&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;tok-cp&quot;&gt;#ifndef _WINDOWSDEF_H&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#define _WINDOWSDEF_H&lt;/span&gt;

&lt;span class=&quot;tok-cp&quot;&gt;#ifdef HAVE_CONFIG_H&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#include &amp;lt;config.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#endif&lt;/span&gt;

&lt;span class=&quot;tok-cp&quot;&gt;#ifndef WINVER&lt;/span&gt;
&lt;span class=&quot;tok-c1&quot;&gt;// Windows Server 2003 with SP1, Windows XP with SP2&lt;/span&gt;
&lt;span class=&quot;tok-c1&quot;&gt;// See http://msdn.microsoft.com/en-us/library/aa383745.aspx&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#define WINVER 0x0502&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#endif &lt;/span&gt;&lt;span class=&quot;tok-cm&quot;&gt;/* WINVER */&lt;/span&gt;&lt;span class=&quot;tok-cp&quot;&gt;&lt;/span&gt;

&lt;span class=&quot;tok-cp&quot;&gt;#include &amp;lt;windows.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;tok-cp&quot;&gt;#endif    &lt;/span&gt;&lt;span class=&quot;tok-cm&quot;&gt;/* _WINDOWSDEF_H */&lt;/span&gt;&lt;span class=&quot;tok-cp&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Definindo a variável &lt;em&gt;WINVER&lt;/em&gt; para o valor &lt;em&gt;0x0502&lt;/em&gt; estaremos limitando o
executável ao Windows XP SP2 ou Windows Server 2003 SP1 no mínimo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Adicionarei o seguinte conteúdo ao arquivo &lt;em&gt;main.cpp&lt;/em&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;main.cpp&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;tok-cp&quot;&gt;#ifdef WINNT&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#include &amp;quot;windowsdef.h&amp;quot;&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#endif&lt;/span&gt;

&lt;span class=&quot;tok-cp&quot;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O compilador só referenciará o arquivo windowsdef.h caso a variável WINNT esteja
definida. A variável WINNT é definida automaticamente pelo compilador caso o
mesmo esteja sendo executado em um ambiente do Windows NT.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para consultar as variáveis automaticamente definidas pelo seu compilador
execute o seguinte comando &quot;gcc -E -dM - &amp;lt; /dev/null | sort&quot;, sendo que &quot;| sort&quot;
é para ordenar a saída em ordem alfabética.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Com essas instruções já se tem o básico para construir um programa
multi-plataforma.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O pacote final pode ser acessado neste link:
&lt;a href=&quot;http://dl.getdropbox.com/u/1671797/Blog/hello-world-0.2.0.tar.gz&quot; class=&quot;bare&quot;&gt;http://dl.getdropbox.com/u/1671797/Blog/hello-world-0.2.0.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;referências&quot;&gt;Referências&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/software/hello/manual/autoconf/Canonicalizing.html&quot; class=&quot;bare&quot;&gt;http://www.gnu.org/software/hello/manual/autoconf/Canonicalizing.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/software/hello/manual/autoconf/Printing-Messages.html&quot; class=&quot;bare&quot;&gt;http://www.gnu.org/software/hello/manual/autoconf/Printing-Messages.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/software/hello/manual/automake/Usage-of-Conditionals.html&quot; class=&quot;bare&quot;&gt;http://www.gnu.org/software/hello/manual/automake/Usage-of-Conditionals.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_03.html&quot; class=&quot;bare&quot;&gt;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_03.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://git.gnome.org/cgit/gtk+/tree/configure.in#n127&quot; class=&quot;bare&quot;&gt;http://git.gnome.org/cgit/gtk+/tree/configure.in#n127&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://svn.win.tue.nl/viewcvs/MCRL2/trunk/src/configure.ac?rev=808&amp;amp;view=markup&quot; class=&quot;bare&quot;&gt;https://svn.win.tue.nl/viewcvs/MCRL2/trunk/src/configure.ac?rev=808&amp;amp;view=markup&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.rtems.com/ml/rtems-users/1998/march/msg00046.html&quot; class=&quot;bare&quot;&gt;http://www.rtems.com/ml/rtems-users/1998/march/msg00046.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Sun, 14 Jun 2009 00:00:00 +0000</pubDate>
        <link>https://fgodoy.me/2009/06/identificando-ambiente-de-destino/</link>
        <guid isPermaLink="true">https://fgodoy.me/2009/06/identificando-ambiente-de-destino/</guid>
        
        <category>automake</category>
        
        <category>autotools</category>
        
        <category>mingw</category>
        
        
        <category>Programação</category>
        
      </item>
    
      <item>
        <title>Hello World com Autotools</title>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para quem não conhece o Autotools, as ferramentas do mesmo têm o principal
objetivo de fazer programas portáveis, possibilitando assim que o programa possa
ser compilado em qualquer ambiente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vou explicar como fazer um programa que exibe “Hello World!” no console
configurado com Autotools. Não vou me ater a detalhes, ficando a cargo do leitor
pesquisar detalhadamente sobre as ferramentas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para continuar você precisará ter instalado as seguintes ferramentas: make,
gcc-c++, autoconf e automake. Para Windows você precisará também do MinGW e do
MSYS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vamos ao projeto:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Primeiramente crie uma pasta para o projeto (&lt;em&gt;hello-world&lt;/em&gt; por exemplo).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agora crie a pasta src (o nome é sua escolha), ela irá conter o código fonte
do projeto.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Crie o arquivo &lt;em&gt;main.cpp&lt;/em&gt; dentro da pasta &lt;em&gt;src&lt;/em&gt;, como o código abaixo.&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;main.cpp&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;tok-cp&quot;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class=&quot;tok-kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;tok-nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;tok-n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;tok-n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;tok-s&quot;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;tok-n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;tok-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;tok-mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dentro da pasta raíz do projeto crie o arquivo &lt;em&gt;Makefile.am&lt;/em&gt;, com o conteúdo
abaixo.&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Makefile.am&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;make&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;SUBDIRS&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; src&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Os arquivos &lt;em&gt;Makefile.am&lt;/em&gt; têm instruções de compilação, mais especificamente,
instruções para o comando &lt;em&gt;make&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;No caso deste arquivo, ele indica que deve ser pesquisado o diretório src.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agora crie outro arquivo &lt;em&gt;Makefile.am&lt;/em&gt; no diretório &lt;em&gt;src&lt;/em&gt;, com o seguinte
conteúdo:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Makefile.am&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;make&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;bin_PROGRAMS&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; hello-world

&lt;span class=&quot;tok-nv&quot;&gt;hello_world_SOURCES&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; main.cpp&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A primeira linha indica quais são os nomes dos programa executáveis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A segunda linha indica quais são os arquivos fontes do programa hello-world.
Observe que todos os caracteres não alfabéticos devem der substituídos por &quot;&lt;em&gt;&quot;,
como em _hello_world&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agora precisamos criar o arquivo &lt;em&gt;configure.ac&lt;/em&gt; (no diretório raíz do
projeto, daqui em diante iremos trabalhar apenas no diretório raíz), que irá
conter as configurações do projeto, como nome, versão e dependências do projeto
entre outros.&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para criar um arquivo &lt;em&gt;configure.ac&lt;/em&gt; preliminar execute o comando abaixo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;$ &lt;/span&gt;autoscan&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Serão criados os arquivos &lt;em&gt;configure.scan&lt;/em&gt; e &lt;em&gt;configure.log&lt;/em&gt;, sendo que o
configure.scan é o configure.ac preliminar e o configure.log contém os erros
encontrados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Renomeie o arquivo &lt;em&gt;configure.scan&lt;/em&gt; para &lt;em&gt;configure.ac&lt;/em&gt;. O arquivo
&lt;em&gt;configure.log&lt;/em&gt; pode ser excluído.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Modifique o arquivo configure.ac como abaixo.&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;configure.ac&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-c&quot;&gt;#                                               -*- Autoconf -*-&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;# Process this file with autoconf to produce a configure script.&lt;/span&gt;

AC_PREREQ&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;2.54&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt;
AC_INIT&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;Hello World&lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt;0.1.0&lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt;myemail@server.com&lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt;hello-world&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt;
AC_CONFIG_SRCDIR&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;src&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt;
AC_CONFIG_HEADERS&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;config.h&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt;
AM_INIT_AUTOMAKE&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;1.9 -Wall -Werror&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;tok-c&quot;&gt;# Checks for programs.&lt;/span&gt;
AC_PROG_CXX

&lt;span class=&quot;tok-c&quot;&gt;# Checks for libraries.&lt;/span&gt;

&lt;span class=&quot;tok-c&quot;&gt;# Checks for header files.&lt;/span&gt;

&lt;span class=&quot;tok-c&quot;&gt;# Checks for typedefs, structures, and compiler characteristics.&lt;/span&gt;

&lt;span class=&quot;tok-c&quot;&gt;# Checks for library functions.&lt;/span&gt;

AC_CONFIG_FILES&lt;span class=&quot;tok-o&quot;&gt;([&lt;/span&gt;Makefile
src/Makefile&lt;span class=&quot;tok-o&quot;&gt;])&lt;/span&gt;
AC_OUTPUT&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;AC_PREREQ&lt;/strong&gt;: A versão mínima necessária do autoconf, geralmente é a versão 2.54.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;AC_INIT&lt;/strong&gt;: Define o nome e versão do projeto, endereço para relatar erros e o
nome do pacote do projeto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;AC_CONFIG_SRCDIR&lt;/strong&gt;: Define a pasta que contém o código fonte.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;AC_CONFIG_HEADERS&lt;/strong&gt;: Define o nome do arquivo de definições do projeto, é
recomendável deixar o padrão.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;AM_INIT_AUTOMAKE&lt;/strong&gt;: É necessário para fazer uso dos &lt;em&gt;Makefile.am&lt;/em&gt;. Define a
versão mínima do &lt;em&gt;automake&lt;/em&gt; e as opções &lt;em&gt;-Wall&lt;/em&gt; e &lt;em&gt;-Werror&lt;/em&gt; definem
respectivamente que devem ser mostrados todos os alertas e que todos os alertas
devem ser tratados como erros.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;AC_PROG_CXX&lt;/strong&gt;: Verifica e exige o compilador C++ para o projeto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;AC_CONFIG_FILES&lt;/strong&gt;: Define os locais dos arquivo &lt;em&gt;Makefile&lt;/em&gt; do projeto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;AC_OUTPUT&lt;/strong&gt;: Macro que executa a saída do &lt;em&gt;autoconf&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;É necessário executar os comandos &lt;em&gt;aclocal&lt;/em&gt;, &lt;em&gt;autoconf&lt;/em&gt;, &lt;em&gt;autoheader&lt;/em&gt; e
&lt;em&gt;automake&lt;/em&gt; para gerar o script de configuração do projeto, mas para facilitar há
o comando &lt;em&gt;autoreconf&lt;/em&gt; que executa todos os comandos necessários.&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Inicialmente iremos executar o comando abaixo para que os arquivos iniciais
necessários sejam criados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;$ &lt;/span&gt;autoreconf --install&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Serão criados vários arquivos, sendo que o arquivo &lt;em&gt;INSTALL&lt;/em&gt; contém instruções
de instalação e configuração e o arquivo &lt;em&gt;COPYING&lt;/em&gt; contém a licença do programa.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O automake exige os arquivos &lt;em&gt;NEWS&lt;/em&gt;, &lt;em&gt;README&lt;/em&gt;, &lt;em&gt;AUTHORS&lt;/em&gt; e &lt;em&gt;ChangeLog&lt;/em&gt;.
Inicialmente crie-os vazios.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;$ &lt;/span&gt;touch NEWS README AUTHORS ChangeLog&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute o comando &lt;em&gt;autoreconf&lt;/em&gt; e será gerado o script de configuração do
projeto novamente, agora sem erros com o  automake.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute o script &lt;em&gt;./configure&lt;/em&gt; para configurar o projeto.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute o comando &lt;em&gt;make&lt;/em&gt; para compilar o projeto.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teste o executável do projeto:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;$ &lt;/span&gt;src/hello-world&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Para criar um pacote do projeto execute o seguinte comando:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;$ &lt;/span&gt;make dist&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;E será criado um pacote distribuível para outros que queiram compilar o projeto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Para que além de ser criado o pacote o mesmo seja testado, execute o seguinte
comando:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;$ &lt;/span&gt;make distcheck&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Pronto, é isso.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Aqui só é mostrado o básico necessário para começar a usar o Autotools, as
possibilidades vão muito além destas explicadas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;O pacote final pode ser acessado neste link:
&lt;a href=&quot;http://dl.getdropbox.com/u/1671797/Blog/hello-world-0.1.0.tar.gz&quot; class=&quot;bare&quot;&gt;http://dl.getdropbox.com/u/1671797/Blog/hello-world-0.1.0.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;referências&quot;&gt;Referências&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Manual do autoconf: &lt;a href=&quot;http://www.gnu.org/software/autoconf/manual/index.html&quot; class=&quot;bare&quot;&gt;http://www.gnu.org/software/autoconf/manual/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Manual do automake: &lt;a href=&quot;http://www.gnu.org/software/automake/manual/index.html&quot; class=&quot;bare&quot;&gt;http://www.gnu.org/software/automake/manual/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Sat, 23 May 2009 00:00:00 +0000</pubDate>
        <link>https://fgodoy.me/2009/05/hello-world-com-autotools/</link>
        <guid isPermaLink="true">https://fgodoy.me/2009/05/hello-world-com-autotools/</guid>
        
        <category>autoconf</category>
        
        <category>automake</category>
        
        <category>autoreconf</category>
        
        <category>autoscan</category>
        
        <category>autotools</category>
        
        <category>make</category>
        
        
        <category>Programação</category>
        
      </item>
    
  </channel>
</rss>
